<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/transitional.dtd">
<html>
<head>

  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Source file /src/pkg/compress/flate/deflate_test.go</title>

  <link rel="stylesheet" type="text/css" href="../../../../doc/style.css">
  <script type="text/javascript" src="../../../../doc/godocs.js"></script>

</head>

<body>

  <script>
    // Catch 'enter' key down events and trigger the search form submission.
    function codesearchKeyDown(event) {
      if (event.which == 13) {
        var form = document.getElementById('codesearch');
        var query = document.getElementById('codesearchQuery');
        form.q.value = "lang:go package:go.googlecode.com " + query.value;
        document.getElementById('codesearch').submit();
}      return true;
}
    // Capture the submission event and construct the query parameter.
    function codeSearchSubmit() {
      var query = document.getElementById('codesearchQuery');
      var form = document.getElementById('codesearch');
      form.q.value = "lang:go package:go.googlecode.com " + query.value;
      return true;
}  </script>

<div id="topnav">
  <table summary="">
    <tr>
      <td id="headerImage">
        <a href="../../../../index.html"><img src="../../../../doc/logo-153x55.png" height="55" width="153" alt="Go Home Page" style="border:0" /></a>
      </td>
      <td>
        <div id="headerDocSetTitle">The Go Programming Language</div>
      </td>
      <td>
        <!-- <table>
          <tr>
            <td>
              <! The input box is outside of the form because we want to add
              a couple of restricts to the query before submitting. If we just
              add the restricts to the text box before submitting, then they
              appear in the box when the user presses 'back'. Thus we use a
              hidden field in the form. However, there's no way to stop the
              non-hidden text box from also submitting a value unless we move
              it outside of the form
              <input type="search" id="codesearchQuery" value="" size="30" onkeydown="return codesearchKeyDown(event);"/>
              <form method="GET" action="http://www.google.com/codesearch" id="codesearch" class="search" onsubmit="return codeSearchSubmit();" style="display:inline;">
                <input type="hidden" name="q" value=""/>
                <input type="submit" value="Code search" />
                <span style="color: red">(TODO: remove for now?)</span>
              </form>
            </td>
          </tr>
          <tr>
            <td>
              <span style="color: gray;">(e.g. &ldquo;pem&rdquo; or &ldquo;xml&rdquo;)</span>
            </td>
          </tr>
        </table> -->
      </td>
    </tr>
  </table>
</div>

<div id="linkList">
  <ul>
    <li class="navhead"><a href="../../../../index.html">Home</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Documents</li>
    <li><a href="../../../../doc/go_tutorial.html">Tutorial</a></li>
    <li><a href="../../../../doc/effective_go.html">Effective Go</a></li>
    <li><a href="../../../../doc/go_faq.html">FAQ</a></li>
    <li><a href="../../../../doc/go_lang_faq.html">Language Design FAQ</a></li>
    <li><a href="http://www.youtube.com/watch?v=rKnDgT73v8s">Tech talk (1 hour)</a> (<a href="../../../../doc/go_talk-20091030.pdf">PDF</a>)</li>
    <li><a href="../../../../doc/go_spec.html">Language Specification</a></li>
    <li><a href="../../../../doc/go_mem.html">Memory Model</a></li>
    <li><a href="../../../../doc/go_for_cpp_programmers.html">Go for C++ Programmers</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">How To</li>
    <li><a href="../../../../doc/install.html">Install Go</a></li>
    <li><a href="../../../../doc/contribute.html">Contribute code</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Programming</li>
    <li><a href="../../../../cmd/index.html">Command documentation</a></li>
    <li><a href="../../../../pkg/index.html">Package documentation</a></li>
    <li><a href="../../../index.html">Source files</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Help</li>
    <li>#go-nuts on irc.freenode.net</li>
    <li><a href="http://groups.google.com/group/golang-nuts">Go Nuts mailing list</a></li>
    <li><a href="http://code.google.com/p/go/issues/list">Issue tracker</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Go code search</li>
    <form method="GET" action="http://golang.org/search" class="search">
    <input type="search" name="q" value="" size="25" style="width:80%; max-width:200px" />
    <input type="submit" value="Go" />
    </form>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Last update</li>
	<li>Thu Nov 12 15:57:42 PST 2009</li>
  </ul>
</div>

<div id="content">
  <h1 id="generatedHeader">Source file /src/pkg/compress/flate/deflate_test.go</h1>

  <!-- The Table of Contents is automatically inserted in this <div>.
       Do not delete this <div>. -->
  <div id="nav"></div>

  <!-- Content is HTML-escaped elsewhere -->
  <pre>
<a id="L1"></a><span class="comment">// Copyright 2009 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="comment">// license that can be found in the LICENSE file.</span>

<a id="L5"></a>package flate

<a id="L7"></a>import (
    <a id="L8"></a>&#34;bytes&#34;;
    <a id="L9"></a>&#34;fmt&#34;;
    <a id="L10"></a>&#34;io&#34;;
    <a id="L11"></a>&#34;os&#34;;
    <a id="L12"></a>&#34;testing&#34;;
<a id="L13"></a>)

<a id="L15"></a>type deflateTest struct {
    <a id="L16"></a>in    []byte;
    <a id="L17"></a>level int;
    <a id="L18"></a>out   []byte;
<a id="L19"></a>}

<a id="L21"></a>type deflateInflateTest struct {
    <a id="L22"></a>in []byte;
<a id="L23"></a>}

<a id="L25"></a>type reverseBitsTest struct {
    <a id="L26"></a>in       uint16;
    <a id="L27"></a>bitCount uint8;
    <a id="L28"></a>out      uint16;
<a id="L29"></a>}

<a id="L31"></a>var deflateTests = []*deflateTest{
    <a id="L32"></a>&amp;deflateTest{[]byte{}, 0, []byte{1, 0, 0, 255, 255}},
    <a id="L33"></a>&amp;deflateTest{[]byte{0x11}, -1, []byte{18, 4, 4, 0, 0, 255, 255}},
    <a id="L34"></a>&amp;deflateTest{[]byte{0x11}, DefaultCompression, []byte{18, 4, 4, 0, 0, 255, 255}},
    <a id="L35"></a>&amp;deflateTest{[]byte{0x11}, 4, []byte{18, 4, 4, 0, 0, 255, 255}},

    <a id="L37"></a>&amp;deflateTest{[]byte{0x11}, 0, []byte{0, 1, 0, 254, 255, 17, 1, 0, 0, 255, 255}},
    <a id="L38"></a>&amp;deflateTest{[]byte{0x11, 0x12}, 0, []byte{0, 2, 0, 253, 255, 17, 18, 1, 0, 0, 255, 255}},
    <a id="L39"></a>&amp;deflateTest{[]byte{0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11}, 0,
        <a id="L40"></a>[]byte{0, 8, 0, 247, 255, 17, 17, 17, 17, 17, 17, 17, 17, 1, 0, 0, 255, 255},
    <a id="L41"></a>},
    <a id="L42"></a>&amp;deflateTest{[]byte{}, 1, []byte{1, 0, 0, 255, 255}},
    <a id="L43"></a>&amp;deflateTest{[]byte{0x11}, 1, []byte{18, 4, 4, 0, 0, 255, 255}},
    <a id="L44"></a>&amp;deflateTest{[]byte{0x11, 0x12}, 1, []byte{18, 20, 2, 4, 0, 0, 255, 255}},
    <a id="L45"></a>&amp;deflateTest{[]byte{0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11}, 1, []byte{18, 132, 2, 64, 0, 0, 0, 255, 255}},
    <a id="L46"></a>&amp;deflateTest{[]byte{}, 9, []byte{1, 0, 0, 255, 255}},
    <a id="L47"></a>&amp;deflateTest{[]byte{0x11}, 9, []byte{18, 4, 4, 0, 0, 255, 255}},
    <a id="L48"></a>&amp;deflateTest{[]byte{0x11, 0x12}, 9, []byte{18, 20, 2, 4, 0, 0, 255, 255}},
    <a id="L49"></a>&amp;deflateTest{[]byte{0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11}, 9, []byte{18, 132, 2, 64, 0, 0, 0, 255, 255}},
<a id="L50"></a>}

<a id="L52"></a>var deflateInflateTests = []*deflateInflateTest{
    <a id="L53"></a>&amp;deflateInflateTest{[]byte{}},
    <a id="L54"></a>&amp;deflateInflateTest{[]byte{0x11}},
    <a id="L55"></a>&amp;deflateInflateTest{[]byte{0x11, 0x12}},
    <a id="L56"></a>&amp;deflateInflateTest{[]byte{0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11}},
    <a id="L57"></a>&amp;deflateInflateTest{[]byte{0x11, 0x10, 0x13, 0x41, 0x21, 0x21, 0x41, 0x13, 0x87, 0x78, 0x13}},
    <a id="L58"></a>&amp;deflateInflateTest{getLargeDataChunk()},
<a id="L59"></a>}

<a id="L61"></a>var reverseBitsTests = []*reverseBitsTest{
    <a id="L62"></a>&amp;reverseBitsTest{1, 1, 1},
    <a id="L63"></a>&amp;reverseBitsTest{1, 2, 2},
    <a id="L64"></a>&amp;reverseBitsTest{1, 3, 4},
    <a id="L65"></a>&amp;reverseBitsTest{1, 4, 8},
    <a id="L66"></a>&amp;reverseBitsTest{1, 5, 16},
    <a id="L67"></a>&amp;reverseBitsTest{17, 5, 17},
    <a id="L68"></a>&amp;reverseBitsTest{257, 9, 257},
    <a id="L69"></a>&amp;reverseBitsTest{29, 5, 23},
<a id="L70"></a>}

<a id="L72"></a>func getLargeDataChunk() []byte {
    <a id="L73"></a>result := make([]byte, 100000);
    <a id="L74"></a>for i := range result {
        <a id="L75"></a>result[i] = byte(int64(i) * int64(i) &amp; 0xFF)
    <a id="L76"></a>}
    <a id="L77"></a>return result;
<a id="L78"></a>}

<a id="L80"></a>func TestDeflate(t *testing.T) {
    <a id="L81"></a>for _, h := range deflateTests {
        <a id="L82"></a>buffer := bytes.NewBuffer([]byte{});
        <a id="L83"></a>w := NewDeflater(buffer, h.level);
        <a id="L84"></a>w.Write(h.in);
        <a id="L85"></a>w.Close();
        <a id="L86"></a>if bytes.Compare(buffer.Bytes(), h.out) != 0 {
            <a id="L87"></a>t.Errorf(&#34;buffer is wrong; level = %v, buffer.Bytes() = %v, expected output = %v&#34;,
                <a id="L88"></a>h.level, buffer.Bytes(), h.out)
        <a id="L89"></a>}
    <a id="L90"></a>}
<a id="L91"></a>}

<a id="L93"></a>func testToFromWithLevel(t *testing.T, level int, input []byte, name string) os.Error {
    <a id="L94"></a>buffer := bytes.NewBuffer([]byte{});
    <a id="L95"></a>w := NewDeflater(buffer, level);
    <a id="L96"></a>w.Write(input);
    <a id="L97"></a>w.Close();
    <a id="L98"></a>inflater := NewInflater(buffer);
    <a id="L99"></a>decompressed, err := io.ReadAll(inflater);
    <a id="L100"></a>if err != nil {
        <a id="L101"></a>t.Errorf(&#34;reading inflater: %s&#34;, err);
        <a id="L102"></a>return err;
    <a id="L103"></a>}
    <a id="L104"></a>inflater.Close();
    <a id="L105"></a>if bytes.Compare(input, decompressed) != 0 {
        <a id="L106"></a>t.Errorf(&#34;decompress(compress(data)) != data: level=%d input=%s&#34;, level, name)
    <a id="L107"></a>}
    <a id="L108"></a>return nil;
<a id="L109"></a>}

<a id="L111"></a>func testToFrom(t *testing.T, input []byte, name string) {
    <a id="L112"></a>for i := 0; i &lt; 10; i++ {
        <a id="L113"></a>testToFromWithLevel(t, i, input, name)
    <a id="L114"></a>}
<a id="L115"></a>}

<a id="L117"></a>func TestDeflateInflate(t *testing.T) {
    <a id="L118"></a>for i, h := range deflateInflateTests {
        <a id="L119"></a>testToFrom(t, h.in, fmt.Sprintf(&#34;#%d&#34;, i))
    <a id="L120"></a>}
<a id="L121"></a>}

<a id="L123"></a>func TestReverseBits(t *testing.T) {
    <a id="L124"></a>for _, h := range reverseBitsTests {
        <a id="L125"></a>if v := reverseBits(h.in, h.bitCount); v != h.out {
            <a id="L126"></a>t.Errorf(&#34;reverseBits(%v,%v) = %v, want %v&#34;,
                <a id="L127"></a>h.in, h.bitCount, v, h.out)
        <a id="L128"></a>}
    <a id="L129"></a>}
<a id="L130"></a>}

<a id="L132"></a>func TestDeflateInflateString(t *testing.T) {
    <a id="L133"></a>gold := bytes.NewBufferString(getEdata()).Bytes();
    <a id="L134"></a>testToFromWithLevel(t, 1, gold, &#34;2.718281828...&#34;);
<a id="L135"></a>}

<a id="L137"></a>func getEdata() string {
    <a id="L138"></a>return &#34;2.718281828459045235360287471352662497757247093699959574966967627724076630353547&#34; +
        <a id="L139"></a>&#34;59457138217852516642742746639193200305992181741359662904357290033429526059563073&#34; +
        <a id="L140"></a>&#34;81323286279434907632338298807531952510190115738341879307021540891499348841675092&#34; +
        <a id="L141"></a>&#34;44761460668082264800168477411853742345442437107539077744992069551702761838606261&#34; +
        <a id="L142"></a>&#34;33138458300075204493382656029760673711320070932870912744374704723069697720931014&#34; +
        <a id="L143"></a>&#34;16928368190255151086574637721112523897844250569536967707854499699679468644549059&#34; +
        <a id="L144"></a>&#34;87931636889230098793127736178215424999229576351482208269895193668033182528869398&#34; +
        <a id="L145"></a>&#34;49646510582093923982948879332036250944311730123819706841614039701983767932068328&#34; +
        <a id="L146"></a>&#34;23764648042953118023287825098194558153017567173613320698112509961818815930416903&#34; +
        <a id="L147"></a>&#34;51598888519345807273866738589422879228499892086805825749279610484198444363463244&#34; +
        <a id="L148"></a>&#34;96848756023362482704197862320900216099023530436994184914631409343173814364054625&#34; +
        <a id="L149"></a>&#34;31520961836908887070167683964243781405927145635490613031072085103837505101157477&#34; +
        <a id="L150"></a>&#34;04171898610687396965521267154688957035035402123407849819334321068170121005627880&#34; +
        <a id="L151"></a>&#34;23519303322474501585390473041995777709350366041699732972508868769664035557071622&#34; +
        <a id="L152"></a>&#34;68447162560798826517871341951246652010305921236677194325278675398558944896970964&#34; +
        <a id="L153"></a>&#34;09754591856956380236370162112047742722836489613422516445078182442352948636372141&#34; +
        <a id="L154"></a>&#34;74023889344124796357437026375529444833799801612549227850925778256209262264832627&#34; +
        <a id="L155"></a>&#34;79333865664816277251640191059004916449982893150566047258027786318641551956532442&#34; +
        <a id="L156"></a>&#34;58698294695930801915298721172556347546396447910145904090586298496791287406870504&#34; +
        <a id="L157"></a>&#34;89585867174798546677575732056812884592054133405392200011378630094556068816674001&#34; +
        <a id="L158"></a>&#34;69842055804033637953764520304024322566135278369511778838638744396625322498506549&#34; +
        <a id="L159"></a>&#34;95886234281899707733276171783928034946501434558897071942586398772754710962953741&#34; +
        <a id="L160"></a>&#34;52111513683506275260232648472870392076431005958411661205452970302364725492966693&#34; +
        <a id="L161"></a>&#34;81151373227536450988890313602057248176585118063036442812314965507047510254465011&#34; +
        <a id="L162"></a>&#34;72721155519486685080036853228183152196003735625279449515828418829478761085263981&#34; +
        <a id="L163"></a>&#34;39559900673764829224437528718462457803619298197139914756448826260390338144182326&#34; +
        <a id="L164"></a>&#34;25150974827987779964373089970388867782271383605772978824125611907176639465070633&#34; +
        <a id="L165"></a>&#34;04527954661855096666185664709711344474016070462621568071748187784437143698821855&#34; +
        <a id="L166"></a>&#34;96709591025968620023537185887485696522000503117343920732113908032936344797273559&#34; +
        <a id="L167"></a>&#34;55277349071783793421637012050054513263835440001863239914907054797780566978533580&#34; +
        <a id="L168"></a>&#34;48966906295119432473099587655236812859041383241160722602998330535370876138939639&#34; +
        <a id="L169"></a>&#34;17795745401613722361878936526053815584158718692553860616477983402543512843961294&#34; +
        <a id="L170"></a>&#34;60352913325942794904337299085731580290958631382683291477116396337092400316894586&#34; +
        <a id="L171"></a>&#34;36060645845925126994655724839186564209752685082307544254599376917041977780085362&#34; +
        <a id="L172"></a>&#34;73094171016343490769642372229435236612557250881477922315197477806056967253801718&#34; +
        <a id="L173"></a>&#34;07763603462459278778465850656050780844211529697521890874019660906651803516501792&#34; +
        <a id="L174"></a>&#34;50461950136658543663271254963990854914420001457476081930221206602433009641270489&#34; +
        <a id="L175"></a>&#34;43903971771951806990869986066365832322787093765022601492910115171776359446020232&#34; +
        <a id="L176"></a>&#34;49300280401867723910288097866605651183260043688508817157238669842242201024950551&#34; +
        <a id="L177"></a>&#34;88169480322100251542649463981287367765892768816359831247788652014117411091360116&#34; +
        <a id="L178"></a>&#34;49950766290779436460058519419985601626479076153210387275571269925182756879893027&#34; +
        <a id="L179"></a>&#34;61761146162549356495903798045838182323368612016243736569846703785853305275833337&#34; +
        <a id="L180"></a>&#34;93990752166069238053369887956513728559388349989470741618155012539706464817194670&#34; +
        <a id="L181"></a>&#34;83481972144888987906765037959036696724949925452790337296361626589760394985767413&#34; +
        <a id="L182"></a>&#34;97359441023744329709355477982629614591442936451428617158587339746791897571211956&#34; +
        <a id="L183"></a>&#34;18738578364475844842355558105002561149239151889309946342841393608038309166281881&#34; +
        <a id="L184"></a>&#34;15037152849670597416256282360921680751501777253874025642534708790891372917228286&#34; +
        <a id="L185"></a>&#34;11515915683725241630772254406337875931059826760944203261924285317018781772960235&#34; +
        <a id="L186"></a>&#34;41306067213604600038966109364709514141718577701418060644363681546444005331608778&#34; +
        <a id="L187"></a>&#34;31431744408119494229755993140118886833148328027065538330046932901157441475631399&#34; +
        <a id="L188"></a>&#34;97221703804617092894579096271662260740718749975359212756084414737823303270330168&#34; +
        <a id="L189"></a>&#34;23719364800217328573493594756433412994302485023573221459784328264142168487872167&#34; +
        <a id="L190"></a>&#34;33670106150942434569844018733128101079451272237378861260581656680537143961278887&#34; +
        <a id="L191"></a>&#34;32527373890392890506865324138062796025930387727697783792868409325365880733988457&#34; +
        <a id="L192"></a>&#34;21874602100531148335132385004782716937621800490479559795929059165547050577751430&#34; +
        <a id="L193"></a>&#34;81751126989851884087185640260353055837378324229241856256442550226721559802740126&#34; +
        <a id="L194"></a>&#34;17971928047139600689163828665277009752767069777036439260224372841840883251848770&#34; +
        <a id="L195"></a>&#34;47263844037953016690546593746161932384036389313136432713768884102681121989127522&#34; +
        <a id="L196"></a>&#34;30562567562547017250863497653672886059667527408686274079128565769963137897530346&#34; +
        <a id="L197"></a>&#34;60616669804218267724560530660773899624218340859882071864682623215080288286359746&#34; +
        <a id="L198"></a>&#34;83965435885668550377313129658797581050121491620765676995065971534476347032085321&#34; +
        <a id="L199"></a>&#34;56036748286083786568030730626576334697742956346437167093971930608769634953288468&#34; +
        <a id="L200"></a>&#34;33613038829431040800296873869117066666146800015121143442256023874474325250769387&#34; +
        <a id="L201"></a>&#34;07777519329994213727721125884360871583483562696166198057252661220679754062106208&#34; +
        <a id="L202"></a>&#34;06498829184543953015299820925030054982570433905535701686531205264956148572492573&#34; +
        <a id="L203"></a>&#34;86206917403695213533732531666345466588597286659451136441370331393672118569553952&#34; +
        <a id="L204"></a>&#34;10845840724432383558606310680696492485123263269951460359603729725319836842336390&#34; +
        <a id="L205"></a>&#34;46321367101161928217111502828016044880588023820319814930963695967358327420249882&#34; +
        <a id="L206"></a>&#34;45684941273860566491352526706046234450549227581151709314921879592718001940968866&#34; +
        <a id="L207"></a>&#34;98683703730220047531433818109270803001720593553052070070607223399946399057131158&#34; +
        <a id="L208"></a>&#34;70996357773590271962850611465148375262095653467132900259943976631145459026858989&#34; +
        <a id="L209"></a>&#34;79115837093419370441155121920117164880566945938131183843765620627846310490346293&#34; +
        <a id="L210"></a>&#34;95002945834116482411496975832601180073169943739350696629571241027323913874175492&#34; +
        <a id="L211"></a>&#34;30718624545432220395527352952402459038057445028922468862853365422138157221311632&#34; +
        <a id="L212"></a>&#34;88112052146489805180092024719391710555390113943316681515828843687606961102505171&#34; +
        <a id="L213"></a>&#34;00739276238555338627255353883096067164466237092264680967125406186950214317621166&#34; +
        <a id="L214"></a>&#34;81400975952814939072226011126811531083873176173232352636058381731510345957365382&#34; +
        <a id="L215"></a>&#34;23534992935822836851007810884634349983518404451704270189381994243410090575376257&#34; +
        <a id="L216"></a>&#34;76757111809008816418331920196262341628816652137471732547772778348877436651882875&#34; +
        <a id="L217"></a>&#34;21566857195063719365653903894493664217640031215278702223664636357555035655769488&#34; +
        <a id="L218"></a>&#34;86549500270853923617105502131147413744106134445544192101336172996285694899193369&#34; +
        <a id="L219"></a>&#34;18472947858072915608851039678195942983318648075608367955149663644896559294818785&#34; +
        <a id="L220"></a>&#34;17840387733262470519450504198477420141839477312028158868457072905440575106012852&#34; +
        <a id="L221"></a>&#34;58056594703046836344592652552137008068752009593453607316226118728173928074623094&#34; +
        <a id="L222"></a>&#34;68536782310609792159936001994623799343421068781349734695924646975250624695861690&#34; +
        <a id="L223"></a>&#34;91785739765951993929939955675427146549104568607020990126068187049841780791739240&#34; +
        <a id="L224"></a>&#34;71945996323060254707901774527513186809982284730860766536866855516467702911336827&#34; +
        <a id="L225"></a>&#34;56310722334672611370549079536583453863719623585631261838715677411873852772292259&#34; +
        <a id="L226"></a>&#34;47433737856955384562468010139057278710165129666367644518724656537304024436841408&#34; +
        <a id="L227"></a>&#34;14488732957847348490003019477888020460324660842875351848364959195082888323206522&#34; +
        <a id="L228"></a>&#34;12810419044804724794929134228495197002260131043006241071797150279343326340799596&#34; +
        <a id="L229"></a>&#34;05314460532304885289729176598760166678119379323724538572096075822771784833616135&#34; +
        <a id="L230"></a>&#34;82612896226118129455927462767137794487586753657544861407611931125958512655759734&#34; +
        <a id="L231"></a>&#34;57301533364263076798544338576171533346232527057200530398828949903425956623297578&#34; +
        <a id="L232"></a>&#34;24887350292591668258944568946559926584547626945287805165017206747854178879822768&#34; +
        <a id="L233"></a>&#34;06536650641910973434528878338621726156269582654478205672987756426325321594294418&#34; +
        <a id="L234"></a>&#34;03994321700009054265076309558846589517170914760743713689331946909098190450129030&#34; +
        <a id="L235"></a>&#34;70995662266203031826493657336984195557769637876249188528656866076005660256054457&#34; +
        <a id="L236"></a>&#34;11337286840205574416030837052312242587223438854123179481388550075689381124935386&#34; +
        <a id="L237"></a>&#34;31863528708379984569261998179452336408742959118074745341955142035172618420084550&#34; +
        <a id="L238"></a>&#34;91708456823682008977394558426792142734775608796442792027083121501564063413416171&#34; +
        <a id="L239"></a>&#34;66448069815483764491573900121217041547872591998943825364950514771379399147205219&#34; +
        <a id="L240"></a>&#34;52907939613762110723849429061635760459623125350606853765142311534966568371511660&#34; +
        <a id="L241"></a>&#34;42207963944666211632551577290709784731562782775987881364919512574833287937715714&#34; +
        <a id="L242"></a>&#34;59091064841642678309949723674420175862269402159407924480541255360431317992696739&#34; +
        <a id="L243"></a>&#34;15754241929660731239376354213923061787675395871143610408940996608947141834069836&#34; +
        <a id="L244"></a>&#34;29936753626215452472984642137528910798843813060955526227208375186298370667872244&#34; +
        <a id="L245"></a>&#34;30195793793786072107254277289071732854874374355781966511716618330881129120245204&#34; +
        <a id="L246"></a>&#34;04868220007234403502544820283425418788465360259150644527165770004452109773558589&#34; +
        <a id="L247"></a>&#34;76226554849416217149895323834216001140629507184904277892585527430352213968356790&#34; +
        <a id="L248"></a>&#34;18076406042138307308774460170842688272261177180842664333651780002171903449234264&#34; +
        <a id="L249"></a>&#34;26629226145600433738386833555534345300426481847398921562708609565062934040526494&#34; +
        <a id="L250"></a>&#34;32442614456659212912256488935696550091543064261342526684725949143142393988454324&#34; +
        <a id="L251"></a>&#34;86327461842846655985332312210466259890141712103446084271616619001257195870793217&#34; +
        <a id="L252"></a>&#34;56969854401339762209674945418540711844643394699016269835160784892451405894094639&#34; +
        <a id="L253"></a>&#34;52678073545797003070511636825194877011897640028276484141605872061841852971891540&#34; +
        <a id="L254"></a>&#34;19688253289309149665345753571427318482016384644832499037886069008072709327673127&#34; +
        <a id="L255"></a>&#34;58196656394114896171683298045513972950668760474091542042842999354102582911350224&#34; +
        <a id="L256"></a>&#34;16907694316685742425225090269390348148564513030699251995904363840284292674125734&#34; +
        <a id="L257"></a>&#34;22447765584177886171737265462085498294498946787350929581652632072258992368768457&#34; +
        <a id="L258"></a>&#34;01782303809656788311228930580914057261086588484587310165815116753332767488701482&#34; +
        <a id="L259"></a>&#34;91674197015125597825727074064318086014281490241467804723275976842696339357735429&#34; +
        <a id="L260"></a>&#34;30186739439716388611764209004068663398856841681003872389214483176070116684503887&#34; +
        <a id="L261"></a>&#34;21236436704331409115573328018297798873659091665961240202177855885487617616198937&#34; +
        <a id="L262"></a>&#34;07943800566633648843650891448055710397652146960276625835990519870423001794655367&#34; +
        <a id="L263"></a>&#34;9&#34;
<a id="L264"></a>}
</pre>

</div>

<div id="footer">
<p>Except as noted, this content is
   licensed under <a href="http://creativecommons.org/licenses/by/3.0/">
   Creative Commons Attribution 3.0</a>.
</div>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-11222381-2");
pageTracker._trackPageview();
</script>
</body>
</html>
<!-- generated at Thu Nov 12 15:42:51 PST 2009 -->
