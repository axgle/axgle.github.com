<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
   "http://www.w3.org/TR/html4/transitional.dtd">
<html>
<head>

  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Text file src/cmd/gotest/gotest</title>

  <link rel="stylesheet" type="text/css" href="../../../doc/style.css">
  <script type="text/javascript" src="../../../doc/godocs.js"></script>

</head>

<body>

  <script>
    // Catch 'enter' key down events and trigger the search form submission.
    function codesearchKeyDown(event) {
      if (event.which == 13) {
        var form = document.getElementById('codesearch');
        var query = document.getElementById('codesearchQuery');
        form.q.value = "lang:go package:go.googlecode.com " + query.value;
        document.getElementById('codesearch').submit();
}      return true;
}
    // Capture the submission event and construct the query parameter.
    function codeSearchSubmit() {
      var query = document.getElementById('codesearchQuery');
      var form = document.getElementById('codesearch');
      form.q.value = "lang:go package:go.googlecode.com " + query.value;
      return true;
}  </script>

<div id="topnav">
  <table summary="">
    <tr>
      <td id="headerImage">
        <a href="../../../index.html"><img src="../../../doc/logo-153x55.png" height="55" width="153" alt="Go Home Page" style="border:0" /></a>
      </td>
      <td>
        <div id="headerDocSetTitle">The Go Programming Language</div>
      </td>
      <td>
        <!-- <table>
          <tr>
            <td>
              <! The input box is outside of the form because we want to add
              a couple of restricts to the query before submitting. If we just
              add the restricts to the text box before submitting, then they
              appear in the box when the user presses 'back'. Thus we use a
              hidden field in the form. However, there's no way to stop the
              non-hidden text box from also submitting a value unless we move
              it outside of the form
              <input type="search" id="codesearchQuery" value="" size="30" onkeydown="return codesearchKeyDown(event);"/>
              <form method="GET" action="http://www.google.com/codesearch" id="codesearch" class="search" onsubmit="return codeSearchSubmit();" style="display:inline;">
                <input type="hidden" name="q" value=""/>
                <input type="submit" value="Code search" />
                <span style="color: red">(TODO: remove for now?)</span>
              </form>
            </td>
          </tr>
          <tr>
            <td>
              <span style="color: gray;">(e.g. &ldquo;pem&rdquo; or &ldquo;xml&rdquo;)</span>
            </td>
          </tr>
        </table> -->
      </td>
    </tr>
  </table>
</div>

<div id="linkList">
  <ul>
    <li class="navhead"><a href="../../../index.html">Home</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Documents</li>
    <li><a href="../../../doc/go_tutorial.html">Tutorial</a></li>
    <li><a href="../../../doc/effective_go.html">Effective Go</a></li>
    <li><a href="../../../doc/go_faq.html">FAQ</a></li>
    <li><a href="../../../doc/go_lang_faq.html">Language Design FAQ</a></li>
    <li><a href="http://www.youtube.com/watch?v=rKnDgT73v8s">Tech talk (1 hour)</a> (<a href="../../../doc/go_talk-20091030.pdf">PDF</a>)</li>
    <li><a href="../../../doc/go_spec.html">Language Specification</a></li>
    <li><a href="../../../doc/go_mem.html">Memory Model</a></li>
    <li><a href="../../../doc/go_for_cpp_programmers.html">Go for C++ Programmers</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">How To</li>
    <li><a href="../../../doc/install.html">Install Go</a></li>
    <li><a href="../../../doc/contribute.html">Contribute code</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Programming</li>
    <li><a href="../../../cmd/index.html">Command documentation</a></li>
    <li><a href="../../../pkg/index.html">Package documentation</a></li>
    <li><a href="../../index.html">Source files</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Help</li>
    <li>#go-nuts on irc.freenode.net</li>
    <li><a href="http://groups.google.com/group/golang-nuts">Go Nuts mailing list</a></li>
    <li><a href="http://code.google.com/p/go/issues/list">Issue tracker</a></li>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Go code search</li>
    <form method="GET" action="http://golang.org/search" class="search">
    <input type="search" name="q" value="" size="25" style="width:80%; max-width:200px" />
    <input type="submit" value="Go" />
    </form>

    <li class="blank">&nbsp;</li>
    <li class="navhead">Last update</li>
	<li>Thu Nov 12 15:51:13 PST 2009</li>
  </ul>
</div>

<div id="content">
  <h1 id="generatedHeader">Text file src/cmd/gotest/gotest</h1>

  <!-- The Table of Contents is automatically inserted in this <div>.
       Do not delete this <div>. -->
  <div id="nav"></div>

  <!-- Content is HTML-escaped elsewhere -->
  <pre>
#!/bin/bash
# Copyright 2009 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# Using all the test*.go files in the current directory, write out a file
# _testmain.go that runs all its tests. Compile everything and run the
# tests.
# If files are named on the command line, use them instead of test*.go.

# Makes egrep,grep work better with · if we put them
# in ordinary C mode instead of what the current language is.
unset LANG
export LC_ALL=C
export LC_CTYPE=C

_GC=$GC	# Make.$GOARCH will overwrite this

if [ ! -f [Mm]akefile ]; then
	echo &#39;please create a Makefile for gotest; see http://golang.org/doc/contribute.html (sic) for details&#39; 1&gt;&amp;2
	exit 2
fi

. $GOROOT/src/Make.$GOARCH
if [ -z &#34;$O&#34; ]; then
	echo &#39;missing $O - maybe no Make.$GOARCH?&#39; 1&gt;&amp;2
	exit 2
fi

E=&#34;&#34;
case &#34;$GOOS&#34; in
nacl)
	E=&#34;nacl&#34;
esac

# TODO(kaib): proper emulator strategy
case x&#34;$GOARCH&#34; in
xarm)
	export E=${EMU_arm:-qemu-arm -cpu cortex-a8}
esac

# Allow overrides
GC=${_GC:-$GC}
GL=${GL:-$LD}
GC=&#34;$GC -I _test&#34;
GL=&#34;$GL -L _test&#34;
export GC GL O AS CC LD

gofiles=&#34;&#34;
loop=true
while $loop; do
	case &#34;x$1&#34; in
	x-*)
		loop=false
		;;
	x)
		loop=false
		;;
	*)
		gofiles=&#34;$gofiles $1&#34;
		shift
		;;
	esac
done

case &#34;x$gofiles&#34; in
x)
	gofiles=$(echo -n $(ls *_test.go *_test.pb.go 2&gt;/dev/null))
esac

case &#34;x$gofiles&#34; in
x)
	echo &#39;no test files found&#39; 1&gt;&amp;2
	exit 2
esac

# Run any commands given in sources, like
#   // gotest: $GC foo.go
# to build any test-only dependencies.
sed -n &#39;s/^\/\/ gotest: //p&#39; $gofiles | sh

# Split $gofiles into external gofiles (those in *_test packages)
# and internal ones (those in the main package).
xgofiles=$(echo $(grep &#39;^package[ 	]&#39; $gofiles /dev/null | grep &#39;:.*_test&#39; | sed &#39;s/:.*//&#39;))
gofiles=$(echo $(grep &#39;^package[ 	]&#39; $gofiles /dev/null | grep -v &#39;:.*_test&#39; | sed &#39;s/:.*//&#39;))

# External $O file
xofile=&#34;&#34;
havex=false
if [ &#34;x$xgofiles&#34; != &#34;x&#34; ]; then
	xofile=&#34;_xtest_.$O&#34;
	havex=true
fi

set -e

make testpackage-clean
make testpackage &#34;GOTESTFILES=$gofiles&#34;
if $havex; then
	$GC -o $xofile $xgofiles
fi

# They all compile; now generate the code to call them.
trap &#34;rm -f _testmain.go _testmain.$O&#34; 0 1 2 3 14 15

# Suppress output to stdout on Linux
MAKEFLAGS=
MAKELEVEL=

importpath=$(make -s importpath)
{
	# test functions are named TestFoo
	# the grep -v eliminates methods and other special names
	# that have multiple dots.
	pattern=&#39;Test([^a-z].*)?&#39;
	tests=$(6nm -s _test/$importpath.a $xofile | egrep &#39; T .*·&#39;$pattern&#39;$&#39; | grep -v &#39;·.*[.·]&#39; | sed &#39;s/.* //; s/·/./&#39;)
	if [ &#34;x$tests&#34; = x ]; then
		echo &#39;gotest: error: no tests matching &#39;$pattern in _test/$importpath.a $xofile 1&gt;&amp;2
		exit 2
	fi

	# package spec
	echo &#39;package main&#39;
	echo
	# imports
	if echo &#34;$tests&#34; | egrep -v &#39;_test\.&#39; &gt;/dev/null; then
		if [ &#34;$importpath&#34; != &#34;testing&#34; ]; then
			echo &#39;import &#34;&#39;$importpath&#39;&#34;&#39;
		fi
	fi
	if $havex; then
		echo &#39;import &#34;./_xtest_&#34;&#39;
	fi
	echo &#39;import &#34;testing&#34;&#39;
	# test array
	echo
	echo &#39;var tests = []testing.Test {&#39;
	for i in $tests
	do
		echo &#39;	testing.Test{ &#34;&#39;$i&#39;&#34;, &#39;$i&#39; },&#39;
	done
	echo &#39;}&#39;
	# body
	echo
	echo &#39;func main() {&#39;
	echo &#39;	testing.Main(tests)&#39;
	echo &#39;}&#39;
}&gt;_testmain.go

$GC _testmain.go
$GL _testmain.$O
$E ./$O.out &#34;$@&#34;
</pre>

</div>

<div id="footer">
<p>Except as noted, this content is
   licensed under <a href="http://creativecommons.org/licenses/by/3.0/">
   Creative Commons Attribution 3.0</a>.
</div>

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-11222381-2");
pageTracker._trackPageview();
</script>
</body>
</html>
<!-- generated at Thu Nov 12 15:42:51 PST 2009 -->
